name: E2E

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BACKEND_APP_PORT: 4300
  BACKEND_APP_SERVER_URL: http://localhost:4300
  NEXT_PUBLIC_BACKEND_APP_URL: http://localhost:4300
  FRONTEND_APP_SERVER_URL: http://localhost
  FRONTEND_APP_PORT: 4400
  HOSTNAME: localhost

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app:
              - 'packages/backend_app/**'
              - 'packages/frontend_app/**'
            e2e:
              - '.github/workflows/e2e.yml'
              - 'packages/e2e/**'
              - '.dockerignore'
              - '.tool-versions'
              - 'biome.jsonc'
              - 'docker/**'
              - 'tsconfig.json'
    outputs:
      app: ${{ steps.filter.outputs.app }}
      e2e: ${{ steps.filter.outputs.e2e }}

  check:
    defaults:
      run:
        working-directory: ./packages/e2e
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: changes
    if: needs.changes.outputs.e2e == 'true'
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - run: npm ci

      - run: npm run lint

      - run: npm run typecheck

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: 
      - changes
    if: >-
      github.event.pull_request.draft != true && (needs.changes.outputs.e2e == 'true' || needs.changes.outputs.app == 'true')
    steps:
      - uses: actions/checkout@v5

      - run: cp .env.example .env
        working-directory: ./docker

      - name: docker compose build
        run: docker compose -f docker-compose.supabase.yml -f docker-compose.prod.yml build
        working-directory: ./docker

      - name: docker compose up frontend_app
        run: docker compose -f docker-compose.supabase.yml -f docker-compose.prod.yml up -d studio frontend_app
        working-directory: ./docker

      - name: docker compose up e2e
        run: docker compose -f docker-compose.supabase.yml -f docker-compose.prod.yml up e2e --exit-code-from e2e
        working-directory: ./docker

      # NOTE: npx playwright show-report name-of-my-extracted-playwright-report
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: "playwright-report-${{ github.sha }}"
          path: packages/e2e/playwright-report/
          retention-days: 1

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: packages/e2e/test-results
          retention-days: 1

      - name: docker compose down
        if: always()
        run: docker compose -f docker-compose.supabase.yml -f docker-compose.prod.yml down --rmi all --volumes --remove-orphans
        working-directory: ./docker

  chromatic:
    name: Run Chromatic
    defaults:
      run:
        working-directory: ./packages/e2e
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: build
    if: needs.build.result == 'success'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - name: Install dependencies
        run: npm ci
      - name: Download Playwright test results
        uses: actions/download-artifact@v5
        with:
          name: test-results
          path: packages/e2e/test-results
      - name: Run Chromatic
        uses: chromaui/action@v13
        with:
          playwright: true
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_E2E }}
          workingDir: packages/e2e
          exitZeroOnChanges: false
        env:
          CHROMATIC_ARCHIVE_LOCATION: ./test-results
