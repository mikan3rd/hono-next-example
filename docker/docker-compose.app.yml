name: "hono-next-example--dev"

services:

  db_migrate:
    image: backend_app
    env_file:
      - .env
    environment:
      DATABASE_HOST: ${POSTGRES_HOST}
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun db:push
      '
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../:/app
      - ../node_modules:/app/node_modules

  backend_app:
    image: backend_app
    build:
      context: .
      dockerfile: packages/backend_app/Dockerfile
      target: dev
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      ENABLE_DB_INITIALIZE: true
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun run --hot src/server.ts
      '
    ports:
      - "${BACKEND_APP_PORT}:${BACKEND_APP_PORT}"
    depends_on:
      db_migrate:
        condition: service_completed_successfully
    volumes:
      - ../:/app
      - ../node_modules:/app/node_modules

  frontend_app:
    build:
      context: .
      dockerfile: packages/frontend_app/Dockerfile
      target: dev
    env_file:
      - .env
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun run dev --port ${FRONTEND_APP_PORT}
      '
    network_mode: host
    ports:
      - "${FRONTEND_APP_PORT}:${FRONTEND_APP_PORT}"
    depends_on:
      - backend_app
    volumes:
      - ../:/app
      - ../node_modules:/app/node_modules

  e2e:
    build:
      context: .
      dockerfile: packages/e2e/Dockerfile
    env_file:
      - .env
    command: |
      npm run e2e:docker
    network_mode: host
    ports:
      - "9323:9323"
    depends_on:
      - frontend_app
    volumes:
      - ../:/app
      - ../playwright_node_modules:/app/node_modules

  export-openapi:
    image: backend_app
    env_file:
      - .env
    volumes:
      - ../:/app
      - ../node_modules:/app/node_modules
    command: |
      bun run --hot src/scripts/export-openapi/index.ts

volumes:
  node_modules:
  playwright_node_modules:
