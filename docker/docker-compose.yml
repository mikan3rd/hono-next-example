name: "hono-next-example--dev"

services:
  studio:
    extends:
      file: docker-compose.supabase.yml
      service: studio

  analytics:
    extends:
      file: docker-compose.supabase.yml
      service: analytics

  db:
    extends:
      file: docker-compose.supabase.yml
      service: db

  meta:
    extends:
      file: docker-compose.supabase.yml
      service: meta

  auth:
    extends:
      file: docker-compose.supabase.yml
      service: auth

  kong:
    extends:
      file: docker-compose.supabase.yml
      service: kong

  vector:
    extends:
      file: docker-compose.supabase.yml
      service: vector

  rest:
    extends:
      file: docker-compose.supabase.yml
      service: rest

  db_migrate:
    image: backend_app
    environment:
      DATABASE_HOST: ${POSTGRES_HOST}
      SUPABASE_URL: http://kong:8000
      SUPABASE_KEY: ${SERVICE_ROLE_KEY}
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun db:push
      '
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../:/app
      - node_modules:/app/node_modules

  backend_app:
    image: backend_app
    build:
      context: ..
      dockerfile: packages/backend_app/Dockerfile
      target: dev
    environment:
      DATABASE_HOST: db
      SUPABASE_URL: http://kong:8000
      SUPABASE_KEY: ${SERVICE_ROLE_KEY}
      ENABLE_DB_INITIALIZE: true
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun run --hot src/server.ts
      '
    ports:
      - "${BACKEND_APP_PORT}:${BACKEND_APP_PORT}"
    depends_on:
      db_migrate:
        condition: service_completed_successfully
      studio:
        condition: service_started
    volumes:
      - ../:/app
      - node_modules:/app/node_modules

  frontend_app:
    build:
      context: ..
      dockerfile: packages/frontend_app/Dockerfile
      target: dev
    environment:
      NEXT_PUBLIC_SUPABASE_URL: ${API_EXTERNAL_URL}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY: ${ANON_KEY}
    command: |
      sh -c '
        bun install --frozen-lockfile &&
        bun run dev --port ${FRONTEND_APP_PORT}
      '
    network_mode: host
    ports:
      - "${FRONTEND_APP_PORT}:${FRONTEND_APP_PORT}"
    depends_on:
      - backend_app
      - auth
    volumes:
      - ../:/app
      - node_modules:/app/node_modules

  e2e:
    build:
      context: ..
      dockerfile: packages/e2e/Dockerfile
    network_mode: host
    ports:
      - "9323:9323"
    depends_on:
      - frontend_app
    volumes:
      - ../:/app
      - playwright_node_modules:/app/packages/e2e/node_modules

  export-openapi:
    image: backend_app
    volumes:
      - ../:/app
      - node_modules:/app/node_modules
    command: |
      bun run --hot src/scripts/export-openapi/index.ts

volumes:
  node_modules:
  playwright_node_modules:
  db-config:
